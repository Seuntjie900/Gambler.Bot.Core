name: Doormat_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

trigger:
- master

name: 1.0.$(Build.BuildId)

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: DownloadSecureFile@1
      name: diceAccountsFile
      inputs:
        secureFile: 'diceaccounts.json'

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $env:DICETESTACCOUNTS = "$(diceAccountsFile.secureFilePath)"
          Write-Host "DICETESTACCOUNTS environment variable is set to $env:DICETESTACCOUNTS"
      env:
        diceAccountsFile.secureFilePath: $(diceAccountsFile.secureFilePath)

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          [xml]$csproj = Get-Content -Path "path/to/YourProject.csproj"
          $csproj.Project.PropertyGroup.Version = "$(Build.BuildNumber)"
          $csproj.Save("path/to/YourProject.csproj")

- stage: Test
  dependsOn: Build
  jobs:
  - job: TestJob
    steps:
    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

- stage: Publish
  dependsOn: Test
  condition: and(succeeded(), eq(dependencies.Test.result, 'Succeeded'))
  jobs:
  - job: PublishJob
    steps:
    - task: PowerShell@2
      inputs:
       targetType: 'inline'
       script: |
         [xml]$csproj = Get-Content -Path "**/*.csproj"
         $csproj.Project.PropertyGroup.Version = "$(Build.BuildNumber)"
         $csproj.Save("$(Build.SourcesDirectory)\**\*.csproj")

    - task: DotNetCoreCLI@2
      inputs:
        command: 'push'
        packagesToPush: '**/bin/Release/*.nupkg' # Update this to the path of your .nupkg file
        nuGetFeedType: 'external'
        publishVstsFeed: 'https://api.nuget.org/v3/index.json'
        apiKey: '$(NuGetApiKey)'
    
